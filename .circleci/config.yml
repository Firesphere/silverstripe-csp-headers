version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 8fc82e19673fd65485d0f66a05d94bad2d3da1df8a848349fcdabab0767f452b
    docker:
      - image: brettt89/silverstripe-web:7.1-platform
        environment:
          - SS_DATABASE_CLASS=MySQLPDODatabase
          - SS_DATABASE_SERVER=127.0.0.1
          - SS_DATABASE_USERNAME=root
          - SS_DATABASE_PASSWORD=ubuntu
          - SS_DATABASE_NAME=circle_test
          - SS_ENVIRONMENT_TYPE=test
          - SS_DEFAULT_ADMIN_USERNAME=admin
          - SS_DEFAULT_ADMIN_PASSWORD=password
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=user
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test
          - MYSQL_HOST=127.0.0.1

    working_directory: /var/www/html

    steps:
      - run: apt-get update && apt-get install -y apt-transport-https lsb-release netcat wget
      # Install additional requirements
      - run: composer self-update
      - checkout
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-cache-
      - run: composer require silverstripe/recipe-cms
      - run: composer install
      # Save all dependencies to cache
      - save_cache:
          key: v2-cache-{{ checksum "composer.lock" }}
          paths:
            - vendor
            - app
            - public
      - run: cp .circleci/circleci.env .env
      - run: cp .circleci/jstest.js.circleci jstest.js
      - run:
          name: Setup Code Climate and Scrutinizer test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
            wget https://scrutinizer-ci.com/ocular.phar

      # run tests!
      - run: until nc -z -v -w30 127.0.0.1 3306; do sleep 1; done
      - run: service apache2 restart
      - run: vendor/bin/sake dev/build flush=all skipannotation=true
      - run: vendor/bin/phpunit --coverage-clover=clover.xml --log-junit ./coverage/junit.xml -d memory_limit=512M tests/unit
      - run:
          name: Code coverage reports
          command: |
            echo "---"
            echo "Scrutinizer:"
            echo "---"
            php ocular.phar code-coverage:upload --format=php-clover clover.xml
            echo "---"
            echo "CodeCov:"
            echo "---"
            bash <(curl -s https://codecov.io/bash) -f clover.xml
            echo "---"
            echo "CodeClimate:"
            echo "---"
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?
      - run: vendor/bin/phpcs --standard=phpcs.xml.dist src tests/unit
      - store_test_results:
          path: /var/www/html/coverage
  docs:
    docker:
      - image: circleci/php:7.4
    steps:
      - add_ssh_keys:
          fingerprints:
            - "18:12:44:3c:09:ac:67:45:f3:b8:6c:bd:df:77:97:f3"
      - run:
          name: Install Graphviz and yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt update && sudo apt install graphviz yarn wget -y
      - run:
          name: Setup SSH access to github
          command: |
            mkdir -p ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - run:
          name: Install repositories
          command: |
            git clone git@github.com:Firesphere/Firesphere.github.io.git . -q
            git clone git@github.com:Firesphere/silverstripe-csp-headers.git Core -q
      - restore_cache:
          keys:
            - silverstripe-csp-yarn-{{ checksum "yarn.lock" }}
            - silverstripe-csp-yarn-
      - run:
          name: Yarn
          command: |
            echo '{"scripts": {"docs": "markdown-folder-to-html"}}' > package.json
            yarn add markdown-folder-to-html
      - save_cache:
          key: silverstripe-csp-yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - vendor
      - run:
          name: Setup git
          command: |
            git config --global user.name "CircleCI"
            git config --global user.email circleci@casa-laguna.net
            git config --global push.default simple
      - run:
          name: PHP API Docs
          command: |
            php phpdoc.phar -t csp-headers --ignore "*/tests/"
      - run:
          name: Markdown to HTML
          command: |
            yarn docs
            mv _docs solr-docs
            rm -rf docs solr
      - run:
          name: Commit and upload if it's the main branch
          command: |
            case $CIRCLE_BRANCH in "master") git add csp-headers ;; esac
            case $CIRCLE_BRANCH in "master") git commit -m "API update for CSP Headers from CircleCI update" ;; esac
            case $CIRCLE_BRANCH in "master") git push ;; esac
workflows:
  version: 2
  dobuild:
    jobs:
      - build
      - docs
